group = "com.example.infineon_nfc_lock_control"
version = "1.0-SNAPSHOT"

buildscript {
    ext.kotlin_version = "1.9.0" // Or a newer stable version you prefer and is compatible
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath("com.android.tools.build:gradle:8.7.3")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version")
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        // Ensure this flatDir is present to find local AARs
        flatDir {
            dirs 'libs'
        }
    }
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

android {
    namespace = "com.example.infineon_nfc_lock_control"

    compileSdk = 35

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }

    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += "src/test/kotlin"
    }

    defaultConfig {
        minSdk = 21
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()

            testLogging {
                events "passed", "skipped", "failed", "standardOut", "standardError"
                outputs.upToDateWhen { false }
                showStandardStreams = true
            }
        }
    }
}

dependencies {
    // Kotlin standard library
    implementation("org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3")

    // AndroidX Libraries
    implementation("androidx.core:core-ktx:1.13.1")
    implementation("androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.1")
    implementation("androidx.lifecycle:lifecycle-livedata-ktx:2.8.1")
    implementation("androidx.fragment:fragment-ktx:1.7.1")

    // Add your local AAR file here. Make sure 'smack-sdk-android-1.2.0-49766.aar' is in the 'libs' folder
    implementation(name: 'smack-sdk-android-1.2.0-49766', ext: 'aar')

    // REMOVE these lines as they are causing the "Could not find" error.
    // If these are part of the smack-sdk-android-1.2.0-49766.aar, you don't need to declare them separately.
    // If they are separate dependencies, you need to add their respective Maven repositories.
    // implementation 'com.infineon.smack.sdk:smack-sdk:1.2.0'
    // implementation 'com.infineon.smack.sdk:smack-sdk-log-android:1.2.0'

    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:2.0.4")

    testImplementation("org.jetbrains.kotlin:kotlin-test")
    testImplementation("org.mockito:mockito-core:5.0.0")
}
